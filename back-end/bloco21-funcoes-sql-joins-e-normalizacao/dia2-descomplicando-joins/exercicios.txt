-- ExercÃ­cio 1: Utilizando o INNER JOIN, encontre as vendas nacionais (domestic_sales) e internacionais (international_sales) de cada filme.
SELECT domestic_sales, international_sales, m.title FROM box_office AS b
INNER JOIN movies AS m
ON m.id = b.movie_id;

-- ðŸš€ ExercÃ­cio 2: Utilizando o INNER JOIN, faÃ§a uma busca que retorne o nÃºmero de vendas para cada filme que possui um nÃºmero maior de vendas internacionais (international_sales) do que vendas nacionais (domestic_sales).
SELECT domestic_sales, international_sales, m.title FROM box_office
INNER JOIN movies AS m
ON m.id = box_office.movie_id
WHERE international_sales > domestic_sales;

-- ðŸš€ ExercÃ­cio 3: Utilizando o INNER JOIN, faÃ§a uma busca que retorne os filmes e sua avaliaÃ§Ã£o (rating) em ordem decrescente.
SELECT m.title, b.rating FROM box_office AS b
INNER JOIN movies AS m
ON m.id = b.movie_id
ORDER BY b.rating DESC;

-- ExercÃ­cio 4: Utilizando o LEFT JOIN, faÃ§a uma busca que retorne todos os dados dos cinemas, mesmo os que nÃ£o possuem filmes em cartaz e, adicionalmente, os dados dos filmes que estÃ£o em cartaz nestes cinemas. Retorne os nomes dos cinemas em ordem alfabÃ©tica.
SELECT name, m.title FROM theater
LEFT JOIN movies AS m
ON m.theater_id = theater.id
ORDER BY name;

-- ExercÃ­cio 5: Utilizando o RIGHT JOIN, faÃ§a uma busca que retorne todos os dados dos filmes, mesmo os que nÃ£o estÃ£o em cartaz e, adicionalmente, os dados dos cinemas que possuem estes filmes em cartaz. Retorne os nomes dos cinemas em ordem alfabÃ©tica.
SELECT movies.title, th.name FROM theater AS th
RIGHT JOIN movies
ON th.id = movies.theater_id
ORDER BY th.name;

-- BÃ´nus
-- ðŸš€ ExercÃ­cio 6: Utilizando o INNER JOIN, selecione todas as informaÃ§Ãµes dos filmes que estÃ£o em cartaz (possuem theater_id diferente de NULL) com avaliaÃ§Ã£o maior que 8.
SELECT movies.title FROM movies
INNER JOIN theater AS th
ON th.id = movies.theater_id
INNER JOIN box_office AS bf
ON bf.movie_id = movies.id
WHERE bf.rating > 8;
