Enunciados:

1 - Utilizando o operador $all, retorne todos os filmes que contenham action e adventure no array category.
2 - ðŸš€ Agora retorne os filmes que contenham action e sci-fi no array category e possuem nota do IMDB maior do que 7.
3 - Retorne todos os filmes com ratings maior do que 103, exibindo apenas os campos title e ratings.
4 - ðŸš€ Retorne todos os filmes com ratings entre 100 e 105, exibindo apenas os campos title e ratings.
5 - ðŸš€ Retorne todos os filmes com ratings entre 64 e 105 e divisÃ­veis por 9, exibindo apenas os campos title e ratings.
6 - Retorne os filmes da categoria adventure e com ratings maior do que 103, exibindo apenas os campos title, ratings e category.
7 - Retorne somente o tÃ­tulo de todos os filmes com dois elementos no array category.
8 - ðŸš€ Retorne somente o tÃ­tulo de todos os filmes com quatro elementos no array ratings.
9 - Busque os filmes em que o mÃ³dulo 5 do campo budget seja 0 e que o array category tenha tamanho 2.
10 - ðŸš€ Retorne os filmes da categoria "sci-fi" ou que possua o ratings maior do que 199, exibindo apenas os campos title, ratings e category.
11 - Retorne os filmes em que o ratings possua tamanho 4 e que seja da category "adventure" ou "family", mas que nÃ£o tenha o imdbRating menor que 7.
12 - ðŸš€ Utilizando o operador $regex, retorne todos os filmes em que a descriÃ§Ã£o comece com a palavra "The".
13 - Utilizando o operador $regex, retorne todos os filmes em que a descriÃ§Ã£o termine com a palavra "humanity.".

Queries: 
1 - db.movies.find({ category: { $all: ['action', 'adventure'] } })
2 - db.movies.find({ category: { $all: ['action', 'sci-fi'] }, imdbRating: { $gt: 7 } })
3 - db.movies.find({ ratings: { $elemMatch: { $gt: 103 } } }, { title: 1, ratings: 1, _id: 0 })
4 - db.movies.find({ ratings: { $elemMatch: { $gte: 100, $lte: 105 } } }, { title: 1, ratings: 1, _id: 0 })
5 - db.movies.find({ ratings: { $elemMatch: { $gte: 64, $lte: 105, $mod: [9, 0] } } }, { _id: 0, title: 1, ratings: 1 })
6 - db.movies.find({ category: { $all: ['adventure'] }, ratings: { $elemMatch: { $gt: 103 } } }, { _id: 0, title: 1, ratings: 1, category: 1 })
7 - db.movies.find({ category: { $size: 2 } }, { _id: 0, title: 1 })
8 - db.movies.find({ ratings: { $size: 4 } }, { _id: 0, title: 1 })
9 - db.movies.find({ budget: { $mod: [5, 0] }, category: { $size: 2 } })	
10 - db.movies.find({ $or: [ { category: { $all: ['sci-fi'] } }, { ratings: { $elemMatch: { $gt: 199 } } } ]}, { _id: 0, title: 1, ratings: 1, category: 1 })
11 - db.movies.find({ ratings: { $size: 4 }, $or: [ { category: 'adventure' }, { category: 'family' }  ], imdbRating: { $gte: 7 } })
12 - db.movies.find({ description: { $regex: /The/ } })
13 - db.movies.find({ description: { $regex: /humanity./ } })

